//vim: set commentstring=//%s:

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 13 4 14 0 1 2 3 4 5 13 14 15 16 17 18 26 27 28 29 30 31 39 40 41 42 43 44 53 54 55 56 57 59 60>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <33 34 35 37 36 7 8 9 7 8 9 10 11 12 20 21 22 23 24 25 33 34 35 36 37 38 46 47 48 49 50 51 60 61 62 63 59 57 56>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1           &kp N2           &kp N3             &kp N4        &kp N5       &kp UP_ARROW     &kp N6     &kp N7         &kp N8              &kp N9           &kp N0               &none
&kp TAB     &kp Q            &kp W            &kp E              &kp R         &kp T        &kp DOWN_ARROW   &kp Y      &kp U          &kp I               &kp O            &kp P                &kp BSLH
&kp CAPS    &hml LEFT_WIN A  &hml LEFT_ALT S  &hml LEFT_SHIFT D  &hml LCTRL F  &kp G        &kp LEFT_ARROW   &kp H      &hmr RCTRL J   &hmr RIGHT_SHIFT K  &hmr LALT L      &hmr RIGHT_WIN SEMI  &kp APOS
&kp LSHFT   &kp Z            &kp X            &kp C              &kp V         &kp B        &kp RIGHT_ARROW  &kp N      &kp M          &kp COMMA           &kp DOT          &kp FSLH             &kp BACKSLASH
&kp C_MUTE  &kp LCTRL        &kp LEFT_GUI     &kp LEFT_ALT       &mo 1         &kp SPACE    &kp ENTER        &kp ENTER  &kp BACKSPACE  &mo 2               &kp RIGHT_SHIFT  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        num {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5                  &mmv MOVE_UP     &kp F6                 &kp F7  &kp F8   &kp F9  &kp F10    &none
&none       &none            &none           &mkp MCLK        &mkp RCLK        &kp LS(LBRC)            &mmv MOVE_DOWN   &kp LS(RBRC)           &kp N7  &kp N8   &kp N9  &kp MINUS  &kp EQUAL
&none       &kp TILDE        &none           &none            &none            &kp LEFT_PARENTHESIS    &mmv MOVE_LEFT   &kp RIGHT_PARENTHESIS  &kp N4  &kp N5   &kp N6  &none      &kp RIGHT_BRACKET
&none       &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &kp LBKT                &mmv MOVE_RIGHT  &kp RBKT               &kp N1  &kp N2   &kp N3  &kp F12    &none
&kp C_MUTE  &none            &none           &none            &none            &none                   &mkp LCLK        &mo 3                  &kp N0  &kp DOT  &none   &none
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&none  &none         &none         &none         &none         &none           &none  &none  &none  &none  &none  &none  &none
&none  &sys_reset    &bt BT_CLR    &out OUT_TOG  &none         &none           &none  &none  &none  &none  &none  &none  &none
&none  &bootloader   &none         &none         &none         &none           &none  &none  &none  &none  &none  &none  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &none  &none  &none  &none  &none  &none
&none  &none         &none         &none         &none         &none           &none  &none  &none  &none  &none  &none
            >;
        };

        layer_4 {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &mo 3            &trans           &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
